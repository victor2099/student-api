{
  "info": {
    "name": "Student CRUD API",
    "_postman_id": "student-crud-collection-id",
    "description": "Test collection for Student CRUD API using MongoDB",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Create Student",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"email\": \"john.doe@example.com\",\n  \"age\": 21\n}"
        },
        "url": {
          "raw": "http://localhost:3000/students",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "3000",
          "path": [
            "students"
          ]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.environment.set(\"studentId\", pm.response.json()._id);"
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is 201\", function () {",
              "    pm.response.to.have.status(201);",
              "});",
              "pm.test(\"Response has _id\", function () {",
              "    var json = pm.response.json();",
              "    pm.expect(json).to.have.property('_id');",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Get All Students",
      "request": {
        "method": "GET",
        "url": {
          "raw": "http://localhost:3000/students",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "3000",
          "path": [
            "students"
          ]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Get Student by ID",
      "request": {
        "method": "GET",
        "url": {
          "raw": "http://localhost:3000/students/{{studentId}}",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "3000",
          "path": [
            "students",
            "{{studentId}}"
          ]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is 200 or 404\", function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([200, 404]);",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Update Student",
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"age\": 25\n}"
        },
        "url": {
          "raw": "http://localhost:3000/students/{{studentId}}",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "3000",
          "path": [
            "students",
            "{{studentId}}"
          ]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is 200 or 404\", function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([200, 404]);",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Delete Student",
      "request": {
        "method": "DELETE",
        "url": {
          "raw": "http://localhost:3000/students/{{studentId}}",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "3000",
          "path": [
            "students",
            "{{studentId}}"
          ]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is 200 or 404\", function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([200, 404]);",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Count Students",
      "request": {
        "method": "GET",
        "url": {
          "raw": "http://localhost:3000/students/count",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "3000",
          "path": [
            "students",
            "count"
          ]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Reset - Delete All Students",
      "request": {
        "method": "GET",
        "url": "http://localhost:3000/students"
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "const students = pm.response.json();",
              "students.forEach((s) => {",
              "  pm.sendRequest({",
              "    url: `http://localhost:3000/students/${s._id}`,",
              "    method: 'DELETE'",
              "  }, () => {});",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    }
  ],
  "variable": []
}